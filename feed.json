{
    "version": "https://jsonfeed.org/version/1",
    "title": "Based And Pasted",
    "description": "",
    "home_page_url": "https://m0n7y5.github.io",
    "feed_url": "https://m0n7y5.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Admin"
    },
    "items": [
        {
            "id": "https://m0n7y5.github.io/beef-dll-creation-and-research-2.html",
            "url": "https://m0n7y5.github.io/beef-dll-creation-and-research-2.html",
            "title": "Beef DLL Creation &amp; Research",
            "summary": " Beef language is still in heavy development. Anything and anytime can change in Beef language and thus this document may not be valid anymore! Beef is an open source performance-oriented compiled programming language. Basically it's C language with C# like syntax. OOP paradigm also&hellip;",
            "content_html": "\n  <p class=\"msg msg--warning\">\n    Beef language is still in heavy development. Anything and anytime can change in Beef language and thus this document may not be valid anymore!\n  </p>\n\n  <p>\n    \n  </p>\n\n  <div class=\"post__toc\">\n    <h3>Content</h3>\n    <ul>\n      <li><a href=\"#requirementsnbspbr\">Requirements&nbsp;<br></a></li><li><a href=\"#about-beefbr\">About Beef<br></a></li><li><a href=\"#classic-dll-with-exported-methods\">Classic DLL with exported methods</a></li><li><a href=\"#dll-with-dllmain\">DLL with DllMain</a></li><li><a href=\"#how-to-work-with-threads-in-dll\">How to work with threads in DLL</a></li>\n    </ul>\n  </div>\n  \n\n    <h2 id=\"requirementsnbspbr\">\n      Requirements&nbsp;<br>\n    </h2>\n\n  <ul>\n    <li>Latest BeefIDE (nightly)\n</li><li>DebugView++</li>\n  </ul>\n\n    <h2 id=\"about-beefbr\">\n      About Beef<br>\n    </h2>\n\n  <p>\n    Beef is an open source performance-oriented compiled programming language. Basically it's C language with C# like syntax. OOP paradigm also can be used for developing applications since in Beef u can create custom reference types (Objects) and combine it with polymorphism. Reflection is also possible. Its quiet fast and its fun to work with. More info can be found here -&gt; https://www.beeflang.org/\n  </p>\n\n    <h2 id=\"classic-dll-with-exported-methods\">\n      Classic DLL with exported methods\n    </h2>\n\n  <p class=\"msg msg--info\">\n    Todo\n  </p>\n\n    <h2 id=\"dll-with-dllmain\">\n      DLL with DllMain\n    </h2>\n\n  <p>\n    So first we need to create DLL project in Beef IDE. Go to File -&gt; New -&gt; New Project and choose Dynamic Library.\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://m0n7y5.github.io/media/posts/4/ProjectCreation.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://m0n7y5.github.io/media/posts/4/responsive/ProjectCreation-xs.png 300w ,https://m0n7y5.github.io/media/posts/4/responsive/ProjectCreation-sm.png 480w ,https://m0n7y5.github.io/media/posts/4/responsive/ProjectCreation-md.png 768w ,https://m0n7y5.github.io/media/posts/4/responsive/ProjectCreation-lg.png 1024w ,https://m0n7y5.github.io/media/posts/4/responsive/ProjectCreation-xl.png 1360w ,https://m0n7y5.github.io/media/posts/4/responsive/ProjectCreation-2xl.png 1600w\"  height=\"282\" width=\"372\" alt=\"\" />\n      \n    </figure>\n\n  <p>\n    Now we need to add new class called Program. Like this:\n  </p>\n<pre class=\"line-numbers  language-csharp\"><code>namespace DLLResearch\n{\n\tpublic static class Program\n\t{\n\t}\n}</code></pre>\n\n  <p>\n    So... Normally when you are creating DLL (for example in C/++) you gonna define DllMain method which is gonna by called when some process gonna try to load our library using, for example, LoadLibrary function from Win32 API. However, this is not possible in Beef since DllMain is already handled by Beef Runtime.\n<br>\n<br>So what we gonna do now? ðŸ¤” It turns out that solution is very simple. Only thing we need to do is write public static constructor and deconstructor for class Program.\n  </p>\n<pre class=\"line-numbers  language-csharp\"><code>using System.Diagnostics;\nusing System;\nnamespace DLLResearch\n{\n    [AlwaysInclude] // &lt;- We need this to include our class in DLL, Normally u dont need this\n\tpublic static class Program\n\t{\n\t\tpublic static this() // &lt;- This will gets called when our library gets loaded\n\t\t{\n\t\t\tDebug.WriteLine(\"Hello From Beef DLL :3\");\n\t\t}\n\n\t\tpublic static ~this() // &lt;- This will gets called when our library gets unloaded\n\t\t{\n\t\t\tDebug.WriteLine(\"See ya next time my friend :)\");\n\t\t}\n\t}\n}</code></pre>\n\n  <p>\n    So lets compile it and inject it into some process. I am gonna use notepad.\n<br>As u can see, when we inject our library into notepad we can see this in DebugView++.<br>\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://m0n7y5.github.io/media/posts/4/Loaded1.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://m0n7y5.github.io/media/posts/4/responsive/Loaded1-xs.png 300w ,https://m0n7y5.github.io/media/posts/4/responsive/Loaded1-sm.png 480w ,https://m0n7y5.github.io/media/posts/4/responsive/Loaded1-md.png 768w ,https://m0n7y5.github.io/media/posts/4/responsive/Loaded1-lg.png 1024w ,https://m0n7y5.github.io/media/posts/4/responsive/Loaded1-xl.png 1360w ,https://m0n7y5.github.io/media/posts/4/responsive/Loaded1-2xl.png 1600w\"  height=\"130\" width=\"701\" alt=\"\" />\n      \n    </figure>\n\n  <p>\n    Our constructor get called and we printed first message. So lets try to unload our library and lets see what happens.&nbsp;<br>\n  </p>\n\n    <figure class=\"post__image post__image--center\">\n      <img loading=\"lazy\" src=\"https://m0n7y5.github.io/media/posts/4/Unloaded1.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://m0n7y5.github.io/media/posts/4/responsive/Unloaded1-xs.png 300w ,https://m0n7y5.github.io/media/posts/4/responsive/Unloaded1-sm.png 480w ,https://m0n7y5.github.io/media/posts/4/responsive/Unloaded1-md.png 768w ,https://m0n7y5.github.io/media/posts/4/responsive/Unloaded1-lg.png 1024w ,https://m0n7y5.github.io/media/posts/4/responsive/Unloaded1-xl.png 1360w ,https://m0n7y5.github.io/media/posts/4/responsive/Unloaded1-2xl.png 1600w\"  height=\"142\" width=\"686\" alt=\"\" />\n      \n    </figure>\n\n  <p>\n    Looks like our deconstructor gets also called.<br>\n  </p>\n\n  <p class=\"msg msg--highlight\">\n    Note: Our deconstructor also gets called when process, where our library is loaded, gonna exit.\n<br>\n  </p>\n\n    <h2 id=\"how-to-work-with-threads-in-dll\">\n      How to work with threads in DLL\n    </h2>\n\n  <p class=\"msg msg--info\">\n    Todo\n  </p>",
            "author": {
                "name": "Admin"
            },
            "tags": [
            ],
            "date_published": "2020-09-01T17:43:28+02:00",
            "date_modified": "2020-09-01T17:43:28+02:00"
        }
    ]
}
